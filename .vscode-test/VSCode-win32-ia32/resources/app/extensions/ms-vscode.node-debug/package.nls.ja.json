{
	"extension.description": "Node.js 用の Visual Studio Code デバッガー拡張機能",
	"node.label": "Node.js",
	"open.loaded.script": "読み込み済みのスクリプトを開く",
	"toggle.skipping.this.file": "このファイルをスキップする",
	"smartStep.description": "元のソースにマップし直すことができない、生成されたコードを自動的にステップ スルーします。",
	"skipFiles.description": "デバッグ時にスキップするファイルの glob パターンの配列。",
	"outFiles.description": "ソース マップを有効にすると、これらの glob パターンは生成した JavaScript ファイルを指定します。パターンが '!' で始まる場合は、ファイルは除外されます。指定しない場合は、生成されたコードはそのソースと同じディレクトリ内にあると想定されます。",
	"outDir.deprecationMessage": "属性 'outDir' は非推奨です。代わりに 'outFiles' を使用してください。",
	"trace.description": "診断出力を生成します。これを true に設定する代わりに、コンマで区切られた 1 つ以上のセレクターの一覧を作成することができます。'verbose' セレクターにより、非常に詳細な出力が生成されます。",
	"launch.args.description": "プログラムに渡されるコマンド ライン引数。",
	"node.protocol.description": "使用する Node.js デバッグ プロトコルです。",
	"node.protocol.auto.description": "最適なプロトコルを自動的に検出しようとします。Node 8.0 以上の起動には 'inspector' を選択します。",
	"node.protocol.inspector.description": "バージョン 6.3 以上の Node.js でサポートされる新しいプロトコルです",
	"node.protocol.legacy.description": "バージョン 8.0 より前の Node.js でサポートされる、以前のプロトコルです",
	"node.sourceMaps.description": "JavaScript ソース マップを使用します (存在する場合)。",
	"node.stopOnEntry.description": "起動後、プログラムを自動的に停止します。",
	"node.port.description": "添付先のデバッグ ポート。既定は 5858 です。",
	"node.address.description": "デバッグ対象のプロセスの TCP/IP アドレス (Node.js 5.0 以上の場合のみ)。既定値は 'localhost' です。",
	"node.timeout.description": "このミリ秒の間、Node.js への接続を再試行します。既定値は 10000 ミリ秒です。",
	"node.restart.description": "Node.js が終了した後、セッションを再開します。",
	"node.localRoot.description": "プログラムの入ったローカル ディレクトリへのパス。",
	"node.remoteRoot.description": "プログラムの入ったリモート ディレクトリへの絶対パス。",
	"node.showAsyncStacks.description": "現在の呼び出し履歴の原因となった非同期呼び出しを表示します。'inspector' プロトコルのみ。",
	"node.launch.program.description": "プログラムへの絶対パス。生成される値は、package.json ファイルと開かれたファイルを参照して推測されます。この属性を編集してください。",
	"node.launch.externalConsole.deprecationMessage": "属性 'externalConsole' は非推奨です。代わりに 'console' を使用してください。",
	"node.launch.console.description": "デバッグ ターゲットの起動場所です。",
	"node.launch.console.internalConsole.description": "VS Code デバッグ コンソールです (プログラムからの入力の読み取りはサポートしていません)",
	"node.launch.console.integratedTerminal.description": "VS Code の統合ターミナルです",
	"node.launch.console.externalTerminal.description": "ユーザー設定を介して構成できる外部ターミナルです",
	"node.launch.cwd.description": "デバッグされるプログラムの作業ディレクトリへの絶対パス。",
	"node.launch.runtimeExecutable.description": "使用するランタイム。絶対パス、または PATH 上で使用可能なランタイムの名前のいずれかです。省略した場合は、'node' とみなされます。",
	"node.launch.runtimeArgs.description": "ランタイム実行可能ファイルに渡される省略可能な引数。",
	"node.launch.env.description": "プログラムに渡される環境変数。",
	"node.launch.envFile.description": "環境変数の定義を含むファイルへの絶対パス。",
	"node.launch.config.name": "起動",
	"node.attach.processId.description": "アタッチ先のプロセスの ID。",
	"node.attach.config.name": "アタッチ",
	"node.processattach.config.name": "プロセスにアタッチ",
	"node.snippet.launch.label": "Node.js: プログラムの起動",
	"node.snippet.launch.description": "ノード プログラムをデバッグ モードで起動します",
	"node.snippet.npm.label": "Node.js: NPM による起動",
	"node.snippet.npm.description": "npm の 'debug' スクリプトによりノード プログラムを起動します",
	"node.snippet.attach.label": "Node.js: アタッチ",
	"node.snippet.attach.description": "実行中のノード プログラムにアタッチします",
	"node.snippet.remoteattach.label": "Node.js: リモート プログラムにアタッチする",
	"node.snippet.remoteattach.description": "リモート ノード プログラムのデバッグ ポートにアタッチします",
	"node.snippet.attachProcess.label": "Node.js: プロセスへのアタッチ",
	"node.snippet.attachProcess.description": "プロセス ピッカーを開いて、アタッチ先の node プロセスか gulp プロセスを選択します",
	"node.snippet.nodemon.label": "Node.js: nodemon のセットアップ",
	"node.snippet.nodemon.description": "nodemon を使用してソース変更時にデバッグ セッションを再起動します",
	"node.snippet.mocha.label": "Node.js: Mocha テスト",
	"node.snippet.mocha.description": "Mocha テストをデバッグします",
	"node.snippet.yo.label": "Node.js: Yeoman ジェネレーター",
	"node.snippet.yo.description": "yeoman ジェネレーターをデバッグします (プロジェクト フォルダーで 'npm link' を実行してインストールします)",
	"node.snippet.gulp.label": "Node.js: gulp タスク",
	"node.snippet.gulp.description": "gulp タスクをデバッグします (プロジェクトにローカルの gulp がインストールされていることを確認します)",
	"node.snippet.electron.label": "Node.js: Electron (メイン)",
	"node.snippet.electron.description": "Electron のメイン プロセスをデバッグします",
	"extensionHost.label": "VS Code 拡張機能の開発",
	"extensionHost.launch.runtimeExecutable.description": "VS Code への絶対パス。",
	"extensionHost.launch.stopOnEntry.description": "起動後に拡張機能ホストを自動的に停止します。",
	"extensionHost.launch.sourceMaps.description": "JavaScript ソース マップを使用します。",
	"extensionHost.launch.env.description": "拡張機能ホストに渡された環境変数。",
	"extensionHost.snippet.launch.label": "VS Code 拡張機能の開発",
	"extensionHost.snippet.launch.description": "VS Code 拡張機能をデバッグ モードで起動します",
	"extensionHost.launch.config.name": "拡張機能の起動"
}