{
	"extension.description": "Visual Studio Code debugger extension for Node.js v6.3+, using the new Inspector Protocol",

	"node.label": "Node.js v6.3+ via Inspector Protocol",

	"node.sourceMaps.description": "Use JavaScript source maps (if they exist).",
	"node.outDir.description": "If source maps are enabled, the generated code is expected in this directory. Deprecated: use 'outFiles' attribute instead.",
	"outDir.deprecationMessage": "Attribute 'outDir' is deprecated, use 'outFiles' instead.",
	"node.outFiles.description": "If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with '!' the files are excluded. If not specified, the generated code is expected in the same directory as its source.",
	"node.stopOnEntry.description": "Automatically stop program after launch.",
	"node.port.description": "Debug port to attach to. Default is 9229.",
	"node.address.description": "TCP/IP address of debug port. Default is 'localhost'.",
	"node.timeout.description": "Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.",
	"node.smartStep.description": "Automatically step through generated code that cannot be mapped back to the original source.",

	"node.diagnosticLogging.description": "When true, the adapter logs its own diagnostic info to the console",
		"node.diagnosticLogging.deprecationMessage": "'diagnosticLogging' is deprecated. Use 'trace' instead.",
	"node.verboseDiagnosticLogging.description": "When true, the adapter logs all traffic with the client and target (as well as the info logged by 'diagnosticLogging')",
		"node.verboseDiagnosticLogging.deprecationMessage": "'verboseDiagnosticLogging' is deprecated. Use 'trace' instead.",
	"node.trace.description": "When 'true', the debugger will log tracing info to a file. When 'verbose', it will also show logs in the console.",

	"node.sourceMapPathOverrides.description": "A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk. See README for details.",
	"node.skipFiles.description": "An array of file or folder names, or glob patterns, to skip when debugging.",
	"node.restart.description": "Restart session after Node.js has terminated.",
	"node.showAsyncStacks.description": "Show the async calls that led to the current call stack.",

	"node.launch.program.description": "Absolute path to the program.",
	"node.launch.console.description": "Where to launch the debug target: internal console, integrated terminal, or external terminal.",
	"node.launch.args.description": "Command line arguments passed to the program.",
	"node.launch.cwd.description": "Absolute path to the working directory of the program being debugged.",
	"node.launch.runtimeExecutable.description": "Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If ommitted 'node' is assumed.",
	"node.launch.runtimeArgs.description": "Optional arguments passed to the runtime executable.",
	"node.launch.env.description": "Environment variables passed to the program.",
	"node.launch.envFile.description": "Absolute path to a file containing environment variable definitions.",

	"node.launch.config.name": "Launch",

	"node.attach.processId.description": "Id of process to attach to.",
	"node.attach.localRoot.description": "The local source root that corresponds to the 'remoteRoot'.",
	"node.attach.remoteRoot.description": "The source root of the remote host.",

	"node.attach.config.name": "Attach",

	"node.processattach.config.name": "Attach to Process",

	"extensionHost.label": "VS Code Extension Development",

	"extensionHost.launch.runtimeExecutable.description": "Absolute path to VS Code.",
	"extensionHost.launch.args.description": "Command line arguments passed to the program.",
	"extensionHost.launch.stopOnEntry.description": "Automatically stop the extension host after launch.",
	"extensionHost.launch.sourceMaps.description": "Use JavaScript source maps.",
	"extensionHost.launch.outFiles.description": "If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with '!' the files are excluded. If not specified, the generated code is expected in the same directory as its source.",
	"extensionHost.smartStep.description": "Automatically step through generated code that cannot be mapped back to the original source.",

	"extensionHost.launch.config.name": "Launch Extension"
}